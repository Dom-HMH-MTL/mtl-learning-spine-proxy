{
    "name": "learning-spine-proxy",
    "version": "1.0.0",
    "description": "Micro-service extracting information from the Learning Spibe Store and offering a granular REST API.",
    "main": "./dist/server/index.js",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/hmhco/mtl-learning-spine-proxy.git"
    },
    "author": "Dom Derrien <dom.derrien@hmhco.com>",
    "license": "HMH license",
    "private": true,
    "publishConfig": {
        "registry": "http://npm.tribalnova.com"
    },
    "dependencies": {
        "@hmh/nodejs-base-server": "latest",
        "node-fetch": "latest"
    },
    "devDependencies": {
        "@types/node": "latest",
        "@types/node-fetch": "latest",
        "@types/sinon": "latest",
        "concurrently": "latest",
        "intern": "latest",
        "nodemon": "latest",
        "npm-watch": "latest",
        "sinon": "latest",
        "source-map-support": "latest",
        "tslint": "latest",
        "typescript": "latest"
    },
    "watch": {
        "_copyJson": "src/server/config.json"
    },
    "scripts": {
        "clean": "rm -rf node_modules dist package-lock.json",
        "_shareModelDefs": "mkdir dist; mkdir dist/server; pushd ./src/client; ln -s ../server/model/ .; popd",
        "_copyJson": "cp ./src/server/config.json ./dist/server",
        "_firstCompilation": "tsc -p ./src/server; tsc -p ./src/client; tsc -p ./src/server-unit; tsc -p ./src/client-unit",
        "init": "npm run _shareModelDefs; npm run _copyJson; npm run _firstCompilation",
        "_watchJson": "npm-watch _copyJson",
        "watch": "npm run init; concurrently --names 'server,client,s-unit, json ' -c 'bgBlue,black.bgGreen,black.bgYellow,bgRed,bgMagenta,bgCyan' 'tsc -p ./src/server --watch' 'tsc -p ./src/client --watch' 'tsc -p ./src/server-unit --watch' 'npm run _watchJson'",
        "dev": "nodemon -r source-map-support/register dist/server/index.js --watch ./dist/server",
        "debug": "nodemon --inspect -r source-map-support/register dist/server/server.js --watch ./dist/server",
        "start": "node dist/server/index.js",
        "test": "intern config=src/server-unit/intern.json",
        "test-polymer": "polymer test -l chrome -p",
        "lint": "tslint -t stylish -p src/tsconfig.json"
    }
}
